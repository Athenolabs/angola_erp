[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Account", 
  "modified": "2016-12-01 17:17:27.206256", 
  "name": "Account-Client", 
  "script": "frappe.ui.form.on('Account', {\n\t\n\trefresh: function(frm) {\n\t\t//initially to see if Description show on the GRID ....\n\t},\n\n\tonrender: function(node) {\n\t\tvar dr_or_cr = node.data.balance < 0 ? \"Cr\" : \"Dr\";\n\t\tif (node.data && node.data.balance!==undefined) {\n\t\t\t\tif (node.data.descricao !==null) $('<span class=\"descricao-area pull-center text-muted small\">'\n\t\t\t\t+ \" - \" + node.data.descricao\n\t\t\t\t+ '</span>').insertBefore(node.$ul);\n\t\t\t$('<span class=\"balance-area pull-right text-muted small\">'\n\t\t\t\t+ (node.data.balance_in_account_currency ?\n\t\t\t\t\t(format_currency(Math.abs(node.data.balance_in_account_currency),\n\t\t\t\t\t\tnode.data.account_currency) + \" / \") : \"\")\n\t\t\t\t+ format_currency(Math.abs(node.data.balance), node.data.company_currency)\n\t\t\t\t+ \" \" + dr_or_cr\n\t\t\t\t+ '</span>').insertBefore(node.$ul);\t\t}\n\t},\n\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Invoice", 
  "modified": "2016-12-09 12:03:54.382908", 
  "name": "Sales Invoice-Client", 
  "script": "taxavenda= cur_frm.call({method:\"angola_erp.util.cambios.cambios\",args:{\"fonte\":\"BNA\"}})\nlista_retencoes = cur_frm.call({method:\"angola_erp.util.angola.get_lista_retencoes\",args:{}})\nlista_impostos = cur_frm.call({method:\"angola_erp.util.angola.get_taxa_ipc\",args:{}})\n\nvar temretencao = false \nvar temimpostoconsumo = false \nvar retencaofonte =0\nvar retencaopercentagem =0\nvar totalpararetencao = 0\nvar totalgeralimpostoconsumo = 0\nvar totalgeralretencaofonte = 0\nvar totalbaseretencaofonte = 0\n\nfrappe.ui.form.on(\"Sales Invoice\", {\n\trefresh: function(frm) {\n\t\tcur_frm.toggle_enable(\"contra_valor\",false)\n\t\tcur_frm.toggle_enable(\"total_retencao_na_fonte\",false)\n\t\t// ************** CAN BE REMOVED \n\t\t//var me = this;\n\t\t//alert(frm.doc.taxes_and_charges)\n\t\tif (frm.doc.taxes_and_charges != undefined){\n\t\t\t//alert(frm.fields_dict.taxes_and_charges.value)\n\t\t\tvar tbl1 = frm.doc.taxes || [];\n\t\t\t//CAN BE REMOVED\n\t\t\tif (tbl1[0].charge_type ==\"Actual\"){\n\t\t\t\tshow_alert(\"Verificando os Impostos ...\",3)\n\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t\t// ************** CAN BE REMOVED **************\n\t},\n\n\t\n});\n  \nfrappe.ui.form.on(\"Sales Invoice\",\"validate\", function (frm) {\n\t//alert (\"Validar\")\n\n\tif (frm.doc.taxes_and_charges != undefined){\n\t\t//alert(frm.fields_dict.taxes_and_charges.value)\n\t\tvar tbl1 = frm.doc.taxes || [];\n\t\tvar tbl2 = frm.doc.items || [];\n\t\ttotalgeralimpostoconsumo = 0\n\t\ttotalgeralretencaofonte = 0\n\t\ttotalbaseretencaofonte = 0\n\t\t\n\t\tfor(var i = 0; i < tbl2.length; i++){\n\t\t\t\tif (tbl2[i].parent = frm.doc.name){\t\t\t\t\t\n\t\t\t\t\tfrappe.model.with_doc(\"Item\", tbl2[i].item_code, function() { \n\t\t\t\t\t\tvar dd = frappe.model.get_doc(\"Item\",tbl2[i].item_code)\n\t\t\t\t\t\tif (dd.imposto_de_consumo == 1){\n\n\t\t\t\t\t\t\tif (tbl2[i].imposto_de_consumo == 0 || tbl2[i].imposto_de_consumo !== tbl2[i].imposto_de_consumo ){\n\t\t\t\t\t\t\t\ttbl2[i].imposto_de_consumo = (tbl2[i].amount * 10) / 100\n\t\t\t\t\t\t\t\tfrappe.model.set_value(frappe.utils.filter_dict(this.cur_frm.fields_dict[\"items\"].grid.docfields, {\"fieldname\": \"imposto_de_consumo\"}),(tbl2[i].amount * 10) / 100)  \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (dd.retencao_na_fonte == 1){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (tbl2[i].retencao_na_fonte == 0 || tbl2[i].retencao_na_fonte !== tbl2[i].retencao_na_fonte ){\n\t\t\t\t\t\t\t\ttbl2[i].retencao_na_fonte = (tbl2[i].amount * retencaopercentagem) / 100\n\t\t\t\t\t\t\t\tfrappe.model.set_value(frappe.utils.filter_dict(this.cur_frm.fields_dict[\"items\"].grid.docfields, {\"fieldname\": \"retencao_na_fonte\"}), (tbl2[i].amount * retencaopercentagem) / 100)  \n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t\ttotalbaseretencaofonte += tbl2[i].amount\n\t\t\t\t\t\t}\t\n\t\t\t\t\t})\t\n\t\t\t\t\ttotalgeralimpostoconsumo += tbl2[i].imposto_de_consumo\n\t\t\t\t\t\n\t\t\t\t\ttotalgeralretencaofonte +=  tbl2[i].retencao_na_fonte\n\t\t\t\t}\n\t\t}\t\n\t\t//Save retencao na INVoice \n\t\tfrm.doc.total_retencao_na_fonte = totalgeralretencaofonte\n\t\tfrm.doc.base_retencao_fonte = totalbaseretencaofonte\n\t\t\n\t\t//alert (tbl1[0].charge_type)\n\t\tif (tbl1[0].charge_type ==\"Actual\"){\n\t\t\t//frm.doc.docstatus =1\n\t\t\ttbl1[0].tax_amount = totalgeralimpostoconsumo;\n\t\t\t//frappe.model.set_value(\"tax_amount\",totalgeralimpostoconsumo)  \n\t\t\tfrappe.model.set_value(frappe.utils.filter_dict(this.cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)  \n\t\t\t\n\t\t}\n\t}\t\t\t\n});\n\ncur_frm.cscript.custom_charge_type = function(doc,cdt,cd){\n\t\t\talert (\"custom Charge_type\")\n\t\t\tvar d = local[cdt][cd]\t\n\t\t\td.tax_amount = 2000\n}\n\n\n\t\nfrappe.ui.form.on(\"Sales Invoice\",\"cambio_bna\", function(frm,cdt,cdn) {\n\tfrappe.call({\n\t\tasync: true,\n\t\tmethod: \"angola_erp.util.cambios.cambios\",\n\t\targs: {\n\t\t\t\"fonte\":\"BNA\"},\n\t\t\tcallback: function(r) {\n\t\t\t\ttaxavenda = r.message\n\t\t\t\tcur_frm.doc.taxa_cambio = taxavenda[1]\n\t\t\t\trefresh_field(\"taxa_cambio\")\n\t\t\t}\n\t\n\t});\n});\n\t\t\ncur_frm.cscript.custom_validate = function(doc, dt, dn) {\n\tif (doc.docstatus == 0){\n\t\tif (frappe.datetime.get_day_diff(new Date(), frappe.datetime.str_to_obj(doc.transaction_date)) > 0 && doc.order_type == \"Sales\") {\n\t\t\t//Due to normal clients this have to be removed for now....\n\t\t\t//validated = false;\n\t\t\t//msgprint(\"Data de Ordem de Venda nao pode ser anterior de hoje\"); // or any other message you want..\n\t\t}\n\t}\n}\n\n\nfrappe.ui.form.on(\"Sales Invoice Item\",\"item_code\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\t\n\ttotalpararetencao = d.amount\n\n\tif (d.item_code){\n\t\tshow_alert(\"Total \" + d.amount,3)\t\n\t\tretencaofonte =0\n\t\tretencaopercentagem =0\n\t\tfrappe.model.with_doc(\"Item\", d.item_code, function() { \n\t\t\tvar dd = frappe.model.get_doc(\"Item\",d.item_code)\n\t//\t\talert (\"rotina \", d.retencao_na_fonte)\n\t\t\tif (dd.retencao_na_fonte == 1){\n\t//\t\tif (d.que_retencao !=\"\"){\n\t\t\t\tfor (x = 0; x < lista_retencoes.responseJSON.message.length; x++){\n\t\t\t\t\tif (lista_retencoes.responseJSON.message[x].descricao == dd.que_retencao) {\n\t\t\t\t\t\tretencaopercentagem = lista_retencoes.responseJSON.message[x].percentagem\t\t\t\t\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}\t\n\t\t\t}\n\t\t\td.retencao_na_fonte = (d.amount * retencaopercentagem) / 100\n\t\t\tretencaofonte = (d.amount * retencaopercentagem) / 100\n\t\t\t\n\t\t\tif (retencaofonte != 0) {\n\t\t\t\tshow_alert(\"Retencao na fonte\",3)\t\n\t\t\t}\t\t\t\n\t\t\tif (dd.imposto_de_consumo == 1){\n\t\t\t\t//Busca o Imposto from Sales Taxes Charges (account 34210000)\t\t\t\n\t\t\t\tshow_alert(\"Imposto de Consumo\",3)\t\t\t\t\t\n\t\t\t\td.imposto_de_consumo = (d.amount * 10) / 100\n\t\t\t\ttotalgeralimpostoconsumo += d.imposto_de_consumo \n\t\t\t\t\n\t\t\t\tif (doc.fields_dict.taxes_and_charges.value == null || doc.fields_dict.taxes_and_charges.value == \"\"){\n\t\t\t\t\t//Add Imposto e Consumo \n\t\t\t\t\t\n\t\t\t\t\tdoc.set_value(\"taxes_and_charges\", lista_impostos.responseJSON.message[0].parent )\n\t\t\t\t\tcur_frm.refresh_fields()\n\t\t\t\t\t//cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname[cdn].charge_type.refresh()\n\t\t\t\t\t// Now adds the Amount of the TAX based on the total of all itens \n\t\t\t\t\t//if(this.cur_frm.fields_dict[\"taxes\"].grid.get_field('charge_type')){\n\t\t\t\t\t//\talert(this.cur_frm.fields_dict[\"taxes\"].grid.grid_rows_by_docname['charge_type']) //get_field('charge_type'))\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\t\n\t\t\t\t\t//var tbl1 = cur_frm.doc.taxes || [];\n\t\t\t\t\t//alert (\"item code \" + tbl1.charge_type)\t\t\t\t\t\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,\"tax_amount\",totalgeralimpostoconsumo)  \n\t\t\t\t\t//} \t\t\n\t\t\t\t\t//cur_frm.cscript.validate_taxes_and_charges(\"Sales Taxes and Charges\", \"INVTD000005\" );\n\t\t\t\t\t\n//\t\t\t\t}else if (doc.fields_dict.taxes_and_charges.field[\"account_head\"] ==\"34210000\"){\n//\t\t\t\t\talert(\"AQUI Tem que ver\")\t\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t//frappe.model.set_value(cdt,cdn,frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)\n\t\t\t\t\tvar me = this;\n\t\t\t\t\tvar tbl1 = this.cur_frm.doc[\"taxes\"];\n\t\t\t\t\t//alert(frappe.utils.filter_dict(cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}))\n\t\t\t\t\t//frappe.model.set_value(frappe.utils.filter_dict(this.cur_frm.fields_dict[\"taxes\"].grid.docfields, {\"fieldname\": \"tax_amount\"}),totalgeralimpostoconsumo)  \n\t\t\t\t}\n\t\t\t\n\t\t\t}\t\n\t\n\n\t\t\t});\t\n\t}\n});\n\ncur_frm.cscript.amount = function(doc,cdt,cdn){\n//frappe.ui.form.on(\"Sales Invoice Item\",\"amount\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\talert(\"Total \" + d.amount)\n\t\n}\n//);\n\n\n\nfrappe.ui.form.on(\"taxes\",\"charge_type\", function(doc,cdt,cdn) {\n\tvar d = locals[cdt][cdn]\n\talert(\"AQUII\")\n\t\n\t\n\t\n});\n\ncur_frm.cscript.tax_amount = function(doc,cdt,cdn) {\n\talert(\"tax Amount\")\n\t\n}\n\ncur_frm.cscript.charge_type = function(doc,cdt,cdn) {\n\talert(\"Charge\")\n\t\n}\n\n\n\nvar itens_ = function(frm,cdt,cdn){\n\tfrappe.model.with_doc(frm, cdt, function() { \n\t\tvar d = frappe.model.get_doc(frm,cdt)\n//\t\talert (\"rotina \", d.retencao_na_fonte)\n\t\tif (d.retencao_na_fonte == 1){\n\t\t\tretencaofonte = d.que_retencao\n\t\t\tshow_alert(\"tem retencao na fonte: \" + d.que_retencao,3)\t\n\n\t\t\t\n//\t\t\tfrappe.model.with_doc(\"Retencoes\", d.que_retencao, function() { \t\n//\t\t\t\tvar retencao = frappe.model.get_doc(\"Retencoes\", d.que_retencao)\n//\t\t\t\tretencaopercentagem = retencao.percentagem\n//\t\t\t\talert(\"Percentagem \" + totalpararetencao + \" \" + retencao.percentagem)\n//\t\t\t});\t\n\t\t\t\n\t\t}\n\n\t});\n}\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Order", 
  "modified": "2016-11-30 11:22:57.402051", 
  "name": "Purchase Order-Client", 
  "script": "cur_frm.cscript.is_subcontracting = function(doc, cdt, cdn) {\r\n\tcur_frm.set_query(\"item_code\", \"items\", function(){\r\n\t\tif (cur_frm.doc.is_subcontracting == 1){\r\n\t\t\treturn{\r\n\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\r\n\t\t\t\tfilters:{ 'is_sub_contracted_item': 1 }\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn{\r\n\t\t\t\tquery: \"erpnext.controllers.queries.item_query\",\r\n\t\t\t\tfilters:{'is_purchase_item':1}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n};\r\nfrappe.ui.form.on(\"Purchase Order\", \"refresh\", function(frm) {\r\n\r\n// Get Items from Production Order\r\n// Get Items from Production Order\r\ncur_frm.add_custom_button(__('Production Order'),\r\n    function() {\r\n    var me = this;\r\n    this.dialog = new frappe.ui.Dialog({\r\n        title: \"Get Items from Production Order\",\r\n        fields: [\r\n            {\"fieldtype\": \"Link\", \"label\": __(\"Production Order\"), \"fieldname\": \"production_order\",\"options\":'Production Order',\"reqd\": 1, \r\n                get_query: function() { return {query: \"rigpl_erpnext.rigpl_erpnext.validations.purchase_order.get_pending_prd\"}},\r\n            },\r\n            {\"fieldtype\": \"Button\", \"label\": __(\"Get\"), \"fieldname\": \"get\"},\r\n            {\"fieldtype\": \"HTML\", \"fieldname\": \"production_order_items_details\"},\r\n        ],\r\n    });\r\n    me.dialog.show();\r\n    fd = this.dialog.fields_dict;\r\n    this.dialog.fields_dict.get.$input.click(function() {\r\n        value = me.dialog.get_values();\r\n\r\n    frappe.call({    \r\n        method: \"frappe.client.get_list\",\r\n           args: {\r\n            doctype: \"Production Order\",\r\n               fields: [\"production_item\", \"item_description \", \"sales_order\", \"so_detail\", \"qty\",\"fg_warehouse\",\"stock_uom\",\"name\"],\r\n               filters: { \"name\" : value.production_order\r\n                },\r\n            },\r\n            callback: function(res){\r\n            if(res && res.message){\r\n                    var row = frappe.model.add_child(cur_frm.doc, \"Purchase Order Item\", \"items\");\r\n                    row.qty = res.message[0]['qty'];\r\n\t\t\t\t\tif (cur_frm.doc.is_subcontracting == 1){\r\n\t\t\t\t\t\trow.subcontracted_item = res.message[0]['production_item'];\r\n\t\t\t\t\t} else{\r\n\t\t\t\t\t\trow.item_code = res.message[0]['production_item'];\r\n\t\t\t\t\t}\r\n\t\t\t\t\trow.description = res.message[0]['item_description'];\r\n                    row.so_detail = res.message[0]['so_detail'];\r\n                    row.uom = res.message[0]['stock_uom'];\r\n                    row.stock_uom = res.message[0]['stock_uom'];\r\n                    row.conversion_factor = 1;\r\n                refresh_field(\"items\");\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    });\r\n\r\n    add_production_order_items_to_stock = function(){\r\n        var items_to_add = []\r\n        value = me.dialog.get_values();\r\n        $.each($(fd.production_order_items_details.wrapper).find(\".select:checked\"), function(name, item){\r\n            items_to_add.push($(item).val());\r\n        });\r\n        if(items_to_add.length > 0){\r\n            for(i=0;i<items_to_add.length;i++){\r\n                add_production_order_items(items_to_add,i)\r\n            }\r\n            me.dialog.hide()\r\n        }    \r\n        else{\r\n            msgprint(\"Select Item Before Add\")\r\n        }\r\n    }\r\n}, __(\"Add items from\"));\r\n\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Customer", 
  "modified": "2016-11-30 11:22:57.429662", 
  "name": "Customer-Client", 
  "script": "cur_frm.add_fetch('charge','letter_head','letter_head');\r\nfrappe.ui.form.on(\"Customer\", \"refresh\", function(frm) {\r\n    frm.add_custom_button(__(\"Sales Call\"), function() {\r\n        // When this button is clicked, do this\r\n\t\t\tfrappe.set_route(\"Form\", \"Sales Call Tool\",\r\n\t\t\t{\"document\": \"Customer\",\r\n\t\t\t \"customer\": frm.doc.name,\r\n\t\t\t \"date_of_communication\": Date()});\r\n\r\n    },  __(\"Add Communication for\"));\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Order", 
  "modified": "2016-12-01 09:44:58.641594", 
  "name": "Sales Order-Client", 
  "script": "taxavenda= cur_frm.call({method:\"angola_erp.util.cambios.cambios\",args:{\"fonte\":\"BNA\"}})\n\nfrappe.ui.form.on(\"Sales Order\", {\n\trefresh: function(frm) {\n\t\tcur_frm.toggle_enable(\"contra_valor\",false)\n\t}\n});\n\nfrappe.ui.form.on(\"Sales Order\",\"cambio_bna\", function(frm,cdt,cdn) {\n\n\t\tfrappe.call({\n\t\t\tasync: true,\n\t\t\tmethod: \"angola_erp.util.cambios.cambios\",\n\t\t\targs: {\n\t\t\t\t\"fonte\":\"BNA\"\t\t\t\t\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\ttaxavenda = r.message\n\t\t\t\tcur_frm.doc.taxa_cambio = taxavenda[1]\n\t\t\t\trefresh_field(\"taxa_cambio\")\n\t\t\t}\n\t\t});\n\n\n\n});\n\n\ncur_frm.cscript.custom_validate = function(doc, dt, dn) {\n\n    if (doc.docstatus == 0){\n\n\t\tif (frappe.datetime.get_day_diff(new Date(), frappe.datetime.str_to_obj(doc.transaction_date)) > 0 && doc.order_type == \"Sales\") {\n\t\t\t//Due to normal clients this have to be removed for now....\n\t\t\t//validated = false;\n\n\t\t\t//msgprint(\"Data de Ordem de Venda nao pode ser anterior de hoje\"); // or any other message you want..\n\n\t\t}\n\n\t}\t\n\n};", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Lead", 
  "modified": "2016-11-30 11:22:57.434948", 
  "name": "Lead-Client", 
  "script": "frappe.ui.form.on(\"Lead\", \"refresh\", function(frm) {\r\n    frm.add_custom_button(__(\"Sales Call\"), function() {\r\n        // When this button is clicked, do this\r\n\t\t\tfrappe.set_route(\"Form\", \"Sales Call Tool\",\r\n\t\t\t{\"document\": \"Lead\",\r\n\t\t\t \"lead\": frm.doc.name,\r\n\t\t\t \"date_of_communication\": Date()});\r\n\t\t\t \r\n    },  __(\"Add Communication for\"));\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Item", 
  "modified": "2016-12-02 17:42:26.853046", 
  "name": "Item-Client", 
  "script": "frappe.provide(\"erpnext.item\");\n\nfrappe.ui.form.on(\"Item\", {\n\trefresh: function(frm) {\n\t\tif (frm.doc.has_variants) {\n\t\t\tfrm.add_custom_button(__(\"Make New Item Code\"), function() {\n\t\t\t\terpnext.item.make_variant_custom()\n\t\t\t}, \"icon-list\", \"btn-default\");\n\t\t}\n\t},\n});\n\n$.extend(erpnext.item, {\n\tget_hidden_fields: function(){\n\t\tvar ret = {}, cur_attrs = [];\n\t\tcur_frm.doc.attributes.forEach(function(d){\n\t\t\tcur_attrs.push(d.attribute);\n\t\t});\n\t\tfrappe.call({\n\t\t\t'async': false,\n\t\t\t'method': 'frappe.client.get_list',\n\t\t\t'args': {\n\t\t\t\t'doctype': 'Item Attribute',\n\t\t\t\t'filters': [\n\t\t\t\t    ['Item Attribute', 'hidden', '=', 1],\n\t\t\t\t\t['Item Attribute', 'name', 'in', cur_attrs]\n\t\t\t\t],\n\t\t\t\tfields: [\n\t\t\t\t\t'name', 'update_from', 'source', 'relation'\n\t\t\t\t]\n\t\t\t},\n\t\t\t'callback': function(res){\n\t\t\t\t(res.message || []).forEach(function(r){\n\t\t\t\t\tvar only_allowed, options = [] ;\n\t\t\t\t\tif (!ret.hasOwnProperty(r.update_from)){\n\t\t\t\t\t\tret[r.update_from] = {};\n\t\t\t\t\t\tret[r.update_from]['source'] = r.source;\n\t\t\t\t\t\tret[r.update_from]['options'] = {}\n\t\t\t\t\t}\n\t\t\t\t\tret[r.update_from][r.name] = r.relation;\n\t\t\t\t\tret[r.name] = r.update_from;\n\t\t\t\t\tonly_allowed = frappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {\"attribute\": r.name});\n\t\t\t\t\t(only_allowed || []).forEach(function(d){\n\t\t\t\t\t\toptions.push(d.attribute)\n\t\t\t\t\t});\n\t\t\t\t\tif (!options.length){\n\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t'async': false,\n\t\t\t\t\t\t\t'method': 'frappe.client.get_list',\n\t\t\t\t\t\t\t'args': {\n\t\t\t\t\t\t\t\t'doctype': 'Item Attribute Value',\n\t\t\t\t\t\t\t\t'filters': [\n\t\t\t\t\t\t\t\t\t['Item Attribute Value', 'parent', '=', r.name]\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t'fields': ['attribute_value'],\n\t\t\t\t\t\t\t\t'limit_page_length': 500\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'callback': function(res){\n\t\t\t\t\t\t\t\t(res.message || []).forEach(function(r){\n\t\t\t\t\t\t\t\t\toptions.push(r.attribute_value);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tret[r.update_from]['options'][r.name] = options;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t},\n\tget_conversion_factors: function(from_uom, to_uom){\n\t\tvar ret;\n\t\tfrappe.call({\n\t\t\t'async': false,\n\t\t\t'method': 'rigpl_erpnext.rigpl_erpnext.item.get_uom_factors',\n\t\t\t'args':{\n\t\t\t\t'from_uom': from_uom,\n\t\t\t\t'to_uom': to_uom\n\t\t\t},\n\t\t\t'callback': function(res){\n\t\t\t\tret = res.message;\n\t\t\t}\n\t\t});\n\t\treturn ret;\n\t},\n\tmake_variant_custom: function(doc) {\n\t\tvar fields = [], hidden_fields = this.get_hidden_fields(doc);\n\t\tfor(var i=0;i< cur_frm.doc.attributes.length;i++){\n\t\t\tvar row = cur_frm.doc.attributes[i],\n\t\t\t    field, creator;\n\t\t\tif (!hidden_fields.hasOwnProperty(row.attribute)){\n\t\t\t\tfield = {\n\t\t\t\t\t\"label\": (row.attribute + \" (\"+ row.field_name + \")\"),\n\t\t\t\t\t\"fieldname\": row.attribute,\n\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\"fieldtype\": row.numeric_values ? \"Float\": \"Select\",\n\t\t\t\t\t\"description\": row.numeric_values ?  \"Min Value: \"+ row.from_range +\" , Max Value: \"+ row.to_range +\", in Increments of: \"+ row.increment : \"\"\n\t\t\t\t}\n\t\t\t\tif (field.fieldtype==='Select') {\n\t\t\t\t\tvar filters = [\n\t\t\t\t\t\t\t['parent', '=', row.attribute],\n\t\t\t\t\t], allowed = [], options = [null];\n\t\t\t\t\tfrappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {'attribute': row.attribute}).forEach(function(d){\n\t\t\t\t\t\tif (d.allowed_values) allowed.push(d.allowed_values);\n\t\t\t\t\t});\n\t\t\t\t\tif (allowed.length){\n\t\t\t\t\t\toptions = options.concat(allowed);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t'method': 'frappe.client.get_list',\n\t\t\t\t\t\t\t'async': false,\n\t\t\t\t\t\t\t'args': {\n\t\t\t\t\t\t\t\t'doctype': 'Item Attribute Value',\n\t\t\t\t\t\t\t\t'filters': filters,\n\t\t\t\t\t\t\t\t'fields': ['attribute_value']\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'callback': function(res){\n\t\t\t\t\t\t\t\tres.message.forEach(function(d){\n\t\t\t\t\t\t\t\t\toptions.push(d.attribute_value);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tfield.options = options;\n\t\t\t\t\tfields.push(field)\n\t\t\t\t}\n\t\t\t} else if (!hidden_fields[hidden_fields[row.attribute]].created){\n\t\t\t\tcreator = hidden_fields[row.attribute];\n\t\t\t\tfield = {\n\t\t\t\t\t'label': (creator + \" (\"+ row.field_name + \")\"),\n\t\t\t\t\t'fieldname': creator,\n\t\t\t\t\t'reqd': 1,\n\t\t\t\t\t'fieldtype': 'Data',\n\t\t\t\t};\n\t\t\t\thidden_fields[creator].created = true;\n\t\t\t\tfields.push(field)\n\t\t\t}\n\t\t}\n\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Make Variant Custom\"),\n\t\t\tfields: fields\n\t\t});\n\t\t\n\t\tObject.keys(d.fields_dict).forEach(function(fieldname){\n\t\t\tif (d.fields_dict[fieldname].df.fieldtype!=='Data') return;\n\t\t\t\n\t\t\tvar field = d.fields_dict[fieldname],\n\t\t\t\ttarget = field.$input.parent(),\n\t\t\t    options = $('<ul class=\"dropdown-menu\"></ul>');\n\t\t\t\n\t\t\tObject.keys(hidden_fields[fieldname]).forEach(function(key){\n\t\t\t\tif (in_list(['created', 'source', 'options'], key)) return;\n\t\t\t\t\n\t\t\t\tvar option = $(format('<li><a data-option=\"{0}\">{0}</a></li>', [hidden_fields[fieldname][key]]));\n\t\t\t\toption.find('a').on('click', function(evt){\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tvar text = options.parent().find('button').text();\n\t\t\t\t\tif (text === $(this).text()) return;\n\t\t\t\t\toptions.parent().find('button').text($(this).text());\n\t\t\t\t\t\n\t\t\t\t\tif (target.hasClass('ui-front')){\n\t\t\t\t\t\tfield.$input.autocomplete('destroy');\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.addClass('ui-front');\n\t\t\t\t\t}\n\t\t\t\t\tif ((hidden_fields[fieldname].options[key]||'').length){\n\t\t\t\t\t\tfield.$input.autocomplete({\n\t\t\t\t\t\t\tminChars: 0,\n\t\t\t\t\t\t\tminLength: 0,\n\t\t\t\t\t\t\tsource: hidden_fields[fieldname].options[key],\n\t\t\t\t\t\t\tselect: function(event, ui){\n\t\t\t\t\t\t\t\tfield.$input.val(ui.item.value);\n\t\t\t\t\t\t\t\tfield.$input.trigger('change');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\toptions.append(option);\n\t\t\t});\n\t\t\t\t\n\t\t\t$(format('<div class=\"input-group-btn\">\\\n\t\t\t\t <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" data-fieldname=\"{1}\" aria-expanded=\"false\">{0}<span class=\"caret\"></span></button>\\\n\t\t\t  </div>', __([hidden_fields[fieldname].source, fieldname]))).append(options).prependTo(target);\n\t\t\t\n\t\t\ttarget.addClass('input-group');\n\t\t\t\n\t\t\tfield.$input.on('change', function(evt){\n\t\t\t\tif (!field.$input.val().length) return;\n\t\t\t\tvar uom = options.parent().find('button').text();\n\t\t\t\tif (uom===hidden_fields[fieldname].source){\n\t\t\t\t\tfield.$input.val(\"\");\n\t\t\t\t\tfrappe.throw(format('Select the \"{0}\" of the field \"{1}\"\", first!', [hidden_fields[fieldname].source, fieldname]))\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t\n\t\td.set_primary_action(__(\"Make\"), function() {\n\t\t\tvar rules = {},\n\t\t\targs = d.get_values();\n\t\t\tif(!args) return;\n\t\t\t\n\t\t\tfrappe.utils.filter_dict(cur_frm.doc.item_variant_restrictions, {'is_numeric': 1}).forEach(function(d){\n\t\t\t\tif (!rules.hasOwnProperty(d.attribute)) rules[d.attribute] = [];\n\t\t\t\trules[d.attribute].push(d.rule);\n\t\t\t});\n\t\t\t\n\t\t\tObject.keys(args).filter(function(key){ return hidden_fields.hasOwnProperty(key); }).forEach(function(key){\n\t\t\t\tvar val = args[key], base, targets = Object.keys(hidden_fields[key]).filter(function(k){ return !in_list(['created', 'source', 'options'], k)});\n\t\t\t\ttry {\n\t\t\t\t\tbase = eval(val);\n\t\t\t\t} catch( e ){\n\t\t\t\t\tfrappe.throw(format('Failed to decode the value \"{0}\"', [val]));\n\t\t\t\t}\n\t\t\t\ttargets.forEach(function(tgt){\n\t\t\t\t\tvar uom = d.fields_dict[key].$input.parent().find('button').text(),\n\t\t\t\t\t\ttgt_uom = hidden_fields[key][tgt],\n\t\t\t\t\t    factors = erpnext.item.get_conversion_factors(uom, tgt_uom);\n\t\t\t\t\tif (uom === tgt_uom) {\n\t\t\t\t\t\targs[tgt] = val.indexOf('/') === -1 ? flt(val) : val;\n\t\t\t\t\t} else if (factors.rgt){\n\t\t\t\t\t\targs[tgt] = flt((base * factors.rgt).toFixed(frappe.defaults.get_global_default('float_precision')));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t    delete args[key];\n\t\t\t});\n\t\t\t\n\t\t\tconsole.table(Object.keys(args).map(function(k){ return {'key': k, 'value': args[k]}}));\n\t\t\t//debugger;\n\t\t\tObject.keys(args).forEach(function(attribute){\n\t\t\t\tif (!rules.hasOwnProperty(attribute)) return;\n\t\t\t\tvar msg = [];\n\t\t\t\tfor (var i=0, j=rules[attribute].length; i < j; i++){\n\t\t\t\t\twith (args){\n\t\t\t\t\t\tout = eval(rules[attribute][i]);\n\t\t\t\t\t\tif (!out){\n\t\t\t\t\t\t\tmsg.push(format('Unable for ensure the rule \"{1}\" for the field \"{0}\"', [attribute, rules[attribute][i]]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (msg.length){\n\t\t\t\t\tfrappe.throw(msg.join('<br>'))\n\t\t\t\t}\n\t\t\t});\n\t\t\tObject.keys(args).forEach(function(attribute){ args[attribute] = args[attribute] + '';});\n\t\t\tfrappe.call({\n\t\t\t\tmethod:\"erpnext.controllers.item_variant.get_variant\",\n\t\t\t\targs: {\n\t\t\t\t\t\"template\": cur_frm.doc.name,\n\t\t\t\t\t\"args\": args\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\t// returns variant item\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tvar variant = r.message;\n\t\t\t\t\t\tvar msgprint_dialog = frappe.msgprint(__(\"Item Variant {0} already exists with same attributes\",\n\t\t\t\t\t\t\t[repl('<a href=\"#Form/Item/%(item_encoded)s\" class=\"strong variant-click\">%(item)s</a>', {\n\t\t\t\t\t\t\t\titem_encoded: encodeURIComponent(variant),\n\t\t\t\t\t\t\t\titem: variant\n\t\t\t\t\t\t\t})]\n\t\t\t\t\t\t));\n\t\t\t\t\t\tmsgprint_dialog.hide_on_page_refresh = true;\n\t\t\t\t\t\tmsgprint_dialog.$wrapper.find(\".variant-click\").on(\"click\", function() {\n\t\t\t\t\t\t\td.hide();\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\td.hide();\n\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\tmethod:\"erpnext.controllers.item_variant.create_variant\",\n\t\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t\t\"item\": cur_frm.doc.name,\n\t\t\t\t\t\t\t\t\"args\": args\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\t\tvar doclist = frappe.model.sync(r.message);\n\t\t\t\t\t\t\t\tfrappe.set_route(\"Form\", doclist[0].doctype, doclist[0].name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\td.show();\n\t},\n\ttoggle_attributes: function(frm) {\n\t\tfrm.toggle_display(\"attributes\", frm.doc.has_variants || frm.doc.variant_of);\n\t\tfrm.fields_dict.attributes.grid.toggle_reqd(\"attribute_value\", frm.doc.variant_of ? 1 : 0);\n\t\tfrm.fields_dict.attributes.grid.set_column_disp(\"attribute_value\", frm.doc.variant_of ? 1 : 0);\n\t}\n});\n\ncur_frm.cscript.custom_onload = function () {\n\tif (cur_frm.doc.has_variants == 1) {\n\t\tcur_frm.set_query('attribute', 'attributes', function(){\n\t\t\treturn {\n\t\t\t\tfilters: [\n\t\t\t\t\t['Item Attribute', 'virtual', '=', 0]\n\t\t\t\t]\n\t\t\t};\n\t\t});\n\t\tcur_frm.set_query('attribute', 'item_variant_restrictions', function(){\n\t\t\tvar attrs = []\n\t\t\tcur_frm.doc.attributes.forEach(function(row){\n\t\t\t\tattrs.push(row.attribute)\n\t\t\t});\n\t\t\treturn {'filters': [['Item Attribute', 'name', 'in', attrs]]}\n\t\t});\n\t\t\n\t}\n}\n//Below code would disable the attribute table after being saved.\nfrappe.ui.form.on(\"Item\", \"refresh\", function(frm){\n    frm.fields_dict.attributes.grid.df.read_only = frm.doc.__islocal ? false: true;\n\tfrm.fields_dict.attributes.grid.docfields.forEach(function(field){\n\t\tfield.read_only = frm.doc.__islocal ? false: true;\n\t});\n    frm.refresh_field(\"attributes\");\n});\n\nfrappe.ui.form.on(\"Item Variant Restrictions\", \"form_render\", function(frm, cdt, cdn){\n\tvar field = cur_frm.fields_dict.item_variant_restrictions.grid.grid_rows_by_docname[cdn].fields_dict.allowed_values;\n\t$(field.input_area).addClass('ui-front');\n\tfield.$input.autocomplete({\n\t\tminChars: 0,\n\t\tminLength: 0,\n\t\tsource: function(request, response){\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'frappe.client.get_list',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: 'Item Attribute Value',\n\t\t\t\t\tfilters: [\n\t\t\t\t\t\t['parent', '=', field.doc.attribute],\n\t\t\t\t\t\t['attribute_value', 'like', request.term + '%']\n\t\t\t\t\t],\n\t\t\t\t\tfields: ['attribute_value']\n\t\t\t\t},\n\t\t\t\tcallback: function(res){\n\t\t\t\t\tresponse($.map(res.message, function(d){ return d.attribute_value;}));\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\tselect: function(event, ui){\n\t\t\tfield.$input.val(ui.item.value);\n\t\t\tfield.$input.trigger('change');\n\t\t}\n\t});\n});\n\nfrappe.ui.form.on(\"Item\",\"retencao_na_fonte\", function(frm){\n\t//Enable field link to Retencoes ...\n});\n\nfrappe.ui.form.on(\"Item\",\"imposto_de_consumo\", function(frm){\n\t//Enable Taxes or Disables...\n\tif (cur_frm.doc.imposto_de_consumo == 1){\n\t\tshow_alert(\"Inserir o imposto de Consumo conta 34210000\",3)\n\t}\n\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Communication", 
  "modified": "2016-11-30 11:22:57.447959", 
  "name": "Communication-Client", 
  "script": "$.extend(frappe.views.CommunicationComposer, {\r\n\t\r\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Salary Slip", 
  "modified": "2016-12-01 10:55:57.784562", 
  "name": "Salary Slip-Client", 
  "script": "// Copyright (c) 2016, HELKyds lda. and contributors\n// For license information, please see license.txt\n//IRT_INSS v1\n\n\nvar irt=0;\nvar inss=0;\nvar salario = 0;\nvar numero_faltas =0;\nvar valor_inicio =0;\nvar valor_fim = 0;\nvar valor_percentual = 0;\nvar parcela_fixa = 0;\n\nlista_irt = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_lista_irt\",args:{}})\ncontador = 0\n\n\nfrappe.ui.form.on('Salary Slip', {\n\n\trefresh: function(frm) {\n\n\t\t\t//Get Salario\n\t\tconsole.log (\"Salary Slip REFRESH \", contador )\n\t\tcontador += 1\n\t\tvar tbl1 = frm.doc.earnings || [];\n\n//\t\tvar tbl2 = frm.doc.deductions || [];\n\n\t\tinss_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_inss\",args:{}})\t\n\n\t\tif (frm.doc.employee != undefined){\n\t\t\tif (numero_faltas.readyState == 4){\n\t\t\t\tif (oldemp != frm.doc.employee || oldmonth != frm.doc.month || oldyear != frm.doc.fiscal_year){\n\t\t\t\t\tnumero_faltas = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_faltas\",args:{\"emp\":frm.doc.employee, \"mes\":frm.doc.month, \"ano\":frm.doc.fiscal_year,\"empresa\":frm.doc.company}}) \n\t\t\t\t\toldemp = frm.doc.employee\n\t\t\t\t\toldmonth = frm.doc.month\n\t\t\t\t\toldyear = frm.doc.fiscal_year\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tcur_frm.doc.numero_de_faltas = numero_faltas.responseJSON.message[0]\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tnumero_faltas = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_faltas\",args:{\"emp\":frm.doc.employee, \"mes\":frm.doc.month, \"ano\":frm.doc.fiscal_year, \"empresa\":frm.doc.company}}) \n\t\t\t\toldemp = frm.doc.employee\n\t\t\t\toldmonth = frm.doc.month\n\t\t\t\toldyear = frm.doc.fiscal_year\n\t\t\t\t\n\t\t\t}\n\t\t\tconsole.log (\"Salary Slip FALTAS\")\n\t\t}else if (numero_faltas !=0){\n\t\t\tif (numero_faltas.readyState != 1){\n\t\t\t\tcur_frm.doc.numero_de_faltas = numero_faltas.responseJSON.message[0]\n\t\t\t}\n\t\t\tconsole.log (\"Salary Slip FALTAS 1\")\n\t\t}\n\t\t\n\t\tfor(var i = 0; i < tbl1.length; i++){\n\n\t\t\tif (tbl1[i].salary_component == \"Salario Base\" || tbl1[i].salary_component == \"Basic\" && tbl1[i].amount != 0){\n\n\t\t\t\tsalario = tbl1[i].amount\n\t\t\t\tif (lista_irt.readyState !=1){\n\t\t\t\t\tfor (var x =0; x < lista_irt.responseJSON.message.length; x++){\n\t\t\t\t\t\t//valor_inicio <= %(start)s and valor_fim >=%(start)s\n\t\t\t\t\t\tif (lista_irt.responseJSON.message[x].valor_inicio <= salario && lista_irt.responseJSON.message[x].valor_fim >= salario){\n\t\t\t\t\t\t\tvalor_inicio = lista_irt.responseJSON.message[x].valor_inicio\n\t\t\t\t\t\t\tvalor_fim = lista_irt.responseJSON.message[x].valor_fim\n\t\t\t\t\t\t\tvalor_percentual = lista_irt.responseJSON.message[x].valor_percentual\n\t\t\t\t\t\t\tparcela_fixa = lista_irt.responseJSON.message[x].parcela_fixa\t\n\t\t\t\t\t\t\tx = lista_irt.responseJSON.message.length +1 \n\t\n\t\t\t\t\t\t}else if (lista_irt.responseJSON.message[x].valor_fim >= salario){\n\t\t\t\t\t\t\tvalor_inicio = lista_irt.responseJSON.message[x].valor_inicio\n\t\t\t\t\t\t\tvalor_fim = lista_irt.responseJSON.message[x].valor_fim\n\t\t\t\t\t\t\tvalor_percentual = lista_irt.responseJSON.message[x].valor_percentual\n\t\t\t\t\t\t\tparcela_fixa = lista_irt.responseJSON.message[x].parcela_fixa\t\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tirt_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_irt\",args:{\"start\":salario}})\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\t\n\n\n\n\t\tif(!frm.doc.__islocal) {\n\n\t\t\tcur_frm.add_custom_button(__('Calcular IRT & INSS'),cur_frm.cscript['calcular_irt_inss'], \"icon-exclamation\", \"btn-default\");\n\n\n\t\t}\n\n\n\t},\n\n\t\n\n\t\n\n});\n\n\n\n\ncur_frm.cscript.calcular_irt_inss = function(doc,cdt,cdn){\n\n\n//\t\t\tcur_frm.add_custom_button(__('Calcular IRT & INSS'),function(doc, cdt, cdn) {\n\n\t\tvar tbl1 = cur_frm.doc.earnings || [];\n\n\t\tvar tbl2 = cur_frm.doc.deductions || [];\n\n\t\t\t\tfor(var i = 0; i < tbl1.length; i++){\n\n\t\t\t\t\tif (tbl1[i].salary_component == \"Salario Base\" || tbl1[i].salary_component == \"Basic\" && tbl1[i].amount != 0){\n\n\t\t\t\t\t\tif (valor_fim !=0){\n\t\t\t\t\t\t\tirt = flt(salario) - valor_inicio;\n\n\t\t\t\t\t\t\tirt = (irt * valor_percentual/ 100) + parcela_fixa;\n \t\t\t\t\t\t\n\t\t\t\t\t\t}else if (irt_valor.responseJSON.message[0].valor_inicio !=undefined){\n\n\t\t\t\t\t\t\tirt = flt(salario) - irt_valor.responseJSON.message[0].valor_inicio;\n\n\t\t\t\t\t\t\tirt = (irt * irt_valor.responseJSON.message[0].valor_percentual/ 100) + irt_valor.responseJSON.message[0].parcela_fixa;\n\n\t\t\t\t\t\t}else{\n\n\t\t\t\t\t\t\tirt = flt(salario) - irt_valor.responseJSON.message[0][0];\n\n\t\t\t\t\t\t\tirt = (irt * irt_valor.responseJSON.message[0][2]/ 100) + irt_valor.responseJSON.message[0][3];\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\n\t\t\t\t\t}\t\t\t\t\t\n\n\t\t\t\t}\n\n\t\t\t\ttotaldeducoes = 0\n\t\t\t\tfor(var j = 0; j < tbl2.length; j++){\n\n\t\t\t\t\tif (tbl2[j].salary_component == \"IRT\" ){\n\n\t\t\t\t\t\tirt_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_ded\",args:{\"ded\":tbl2[j].name,\"d_val\":irt}});\n\n\t\t\t\t\t}else if (tbl2[j].salary_component == \"INSS\" ){\t\n\n\t\t\t\t\t\tif (inss_valor.responseJSON.message !=undefined){\n\n\t\t\t\t\t\t\t//inss_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.get_inss\",args:{}})\t\n\n\t\t\t\t\t\t\tinss_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_ded\",args:{\"ded\":tbl2[j].name,\"d_val\":flt(salario)*inss_valor.responseJSON.message}});\n\n\t\t\t\t\t\t}else{\n\n\t\t\t\t\t\t\talert(\"INSS\")\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}else if (tbl2[j].salary_component == \"Faltas Injustificadas\" ){\t\n\t\t\t\t\t\t//so pode ser feito no SALARY SLIP due to the Month being processed.\n\t\t\t\t\t\t//alert(total_days_in_month - numero_faltas.responseJSON.message[0])\n\t\t\t\t\t\t\t//desconto_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_ded\",args:{\"ded\":tbl2[j].name,\"d_val\":(flt(salario)/26)*numero_faltas.responseJSON.message[0]}});\n\n\t\t\t\t\t\t//OUTRA Formula para desconto de Faltas SB/26/2+SB/26*numero_faltas\n\t\t\t\t\t\tdesconto_valor =cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_ded\",args:{\"ded\":tbl2[j].name,\"d_val\":(((flt(salario)/26)/2)+(flt(salario)/26))*numero_faltas.responseJSON.message[0]}});\n\n\t\t\t\t\t\t//if leave without pay 0 than payment days less numero_faltas otherwise working days - leave without - numero_faltas\n\t\t\t\t\t\tif (cur_frm.doc.leave_without_pay ==0){\n\t\t\t\t\t\t\tpagamentodias = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_salary_slip_pay_days\",args:{\"emp\":cur_frm.doc.employee, \"mes\":cur_frm.doc.month, \"ano\":cur_frm.doc.fiscal_year, \"pag\":(cur_frm.doc.total_days_in_month - numero_faltas.responseJSON.message[0]) }});\n\t\t\t\t\t\t\tfrappe.model.set_value(cur_frm.doc.doctype,cur_frm.doc.name,'payment_days',cur_frm.doc.total_days_in_month  - numero_faltas.responseJSON.message[0]) \n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tpagamentodias = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_salary_slip_pay_days\",args:{\"emp\":cur_frm.doc.employee, \"mes\":cur_frm.doc.month, \"ano\":cur_frm.doc.fiscal_year, \"pag\":(cur_frm.doc.total_days_in_month - cur_frm.doc.leave_without_pay - numero_faltas.responseJSON.message[0]) }});\n\t\n\t\t\t\t\t\t}\n\n\n\n\t\t\t\t\t}\t\n\t\t\t\t\ttotaldeducoes += tbl2[j].amount\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//calculate_earning_total(cur_frm.doc, cur_frm.doc.doctype, cur_frm.doc.name,true);\n\n\t\t\t\t//calculate_ded_total(cur_frm.doc, cur_frm.doc.doctype, cur_frm.doc.name,true);\n//\t\t\t\tcur_frm.doc.total_deduction = totaldeducoes\n\t\t\t\tfrappe.model.set_value(cur_frm.doc.doctype,cur_frm.doc.name,'total_deduction',totaldeducoes)\n\t\t\t\trefresh_field('gross_pay','total_deduction');\n\t\t\t\tcalculate_net_pay(cur_frm.doc, cur_frm.doc.doctype, cur_frm.doc.name);\n\n\n//\t\t\t\tcur_frm.refresh()\n\n//\t\t\t\tcur_frm.reload_doc()\n\n\n//\t\t\t});\n}\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Process Payroll", 
  "modified": "2016-12-01 10:52:59.950606", 
  "name": "Process Payroll-Client", 
  "script": "cur_frm.cscript.processar_faltas = function(doc,cdt,cdn){\n\n\tnumero_faltas = cur_frm.call({method:\"angola_erp.angola_erpnext.validations.irt.set_faltas\",args:{\"mes\":cur_frm.doc.month, \"ano\":cur_frm.doc.fiscal_year, \"empresa\":cur_frm.doc.company}}) \n\n}\n", 
  "script_type": "Client"
 }
]